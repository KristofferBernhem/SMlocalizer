<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>KTH_CellPhysics</groupId>
	<artifactId>SMlocalizer</artifactId>
	<version>1.3.3</version>
	<name>SM localizer</name>
	<description>Single molecule microscopy localizer</description>
	<organization>
		<name>KTH Royal Institute of Technology</name>
	</organization>
	<developers>
		<developer>
			<id>Koffe</id>
			<name>Kristoffer Bernhem</name>
			<url>github.com/KristofferBernhem/</url>
			<roles>				
				<role>lead</role>
				<role>developer</role>
				<role>debugger</role>				
				<role>support</role>
				<role>maintainer</role>
			</roles>
		</developer>
		<developer>			
			<name>Hjalmar Brismar</name>
			<url>https://www.cellphysics.kth.se</url>
			<roles>				
				<role>instigator</role>
				<role>developer</role>
				<role>debugger</role>				
			</roles>
		</developer>
	</developers>
	<parent>	
		<groupId>net.imagej</groupId>
		<artifactId>pom-imagej</artifactId>
		<version>15.8.0</version>	
		<relativePath />
	</parent>	
	
	    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Set needed version of JCuda here -->
        <jcuda.version>0.7.5b</jcuda.version>
        <!-- Set needed version of JCudnn here -->
        <jcudnn.version>0.7.5</jcudnn.version>
        <github.global.server>github</github.global.server>
        
    </properties>
    
	<repositories>																	
		<repository>
			<id>imagej.releases</id>
			<url>http://maven.imagej.net/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>imagej.snapshots</id>
			<url>http://maven.imagej.net/content/repositories/snapshots</url>
		</repository>
		<repository>
			<id>ome.releases</id>
			<url>http://maven.imagej.net/content/repositories/ome-releases/</url>
		</repository>
		<repository>
			<id>imagej.public</id>
			<url>http://maven.imagej.net/content/groups/public</url>
		</repository>
	
        <repository>
            <id>jcuda.local</id>
            <name>JCuda</name>
            <url>file:${project.basedir}/repo</url>
        </repository>          
	</repositories>
	
	
	
	<dependencies>
			<dependency>
			<groupId>ome</groupId>
			<artifactId>formats-api</artifactId>
			</dependency>
<!--JCuda Java libs-->
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcublas</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcudnn</artifactId>
            <version>${jcudnn.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcuda</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcufft</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcurand</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcusparse</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcusolver</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        
	<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej</artifactId>
			</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-plugins-commands</artifactId>
			</dependency>


		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2-ij</artifactId>
			</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.2</version>
		</dependency>
		
	<!--  	<dependency>
			<groupId>io.scif</groupId>
			<artifactId>jai_imageio</artifactId>
			<version>1.0.1</version>			
		</dependency>-->
		
		
	</dependencies>
	
	
	
	<build>
	    <defaultGoal>package</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--usage of exec plugin-->
            <!--mvn exec:exec -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-Djava.library.path=${project.build.directory}/lib</argument>
                        <argument>-classpath</argument>
                        <!-- automatically creates the classpath using all project dependencies,
                                   also adding the project build directory -->
                        <classpath/>
                        <!--Replace with your class reference if any -->
                        <argument>org.mystic.cuda.JCudaRuntimeTest</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
	<!-- 
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
		
					<archive>
		
						<manifest>
		
							<addClasspath>true</addClasspath>
		 
		
							<classpathPrefix>lib/</classpathPrefix>
		
							<mainClass>ijfx.ui.main.ImageJFX</mainClass>
						</manifest>

						<manifestEntries>
							<SplashScreen-Image>logo.gif</SplashScreen-Image>
						</manifestEntries>

					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
		
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
		</plugins> -->
	</build>
	
	    <!--Set of auto detected profiles for different OS family/architecture-->
    <profiles>

        <!--
            Assuming that user is running on windows, then to deploy the jar:
            // Test if the jar is created with all the dependency
            mvn clean package -P deploy-jar,!windows-x86_64
            // Deploy it on github
            mvn clean deploy -P deploy-jar,!windows-x86_64
         -->
        <profile>
            <id>deploy-jar</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>2.8.2</version>
                        <configuration>
                            <altDeploymentRepository>
                                internal.repo::default::file://${project.build.directory}/mvn-repo
                            </altDeploymentRepository>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <!-- get all project dependencies -->
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <!-- MainClass in mainfest make a executable jar -->
                            <archive>
                                <manifest>
                                    <mainClass>org.mystic.cuda.JCudaRuntimeTest</mainClass>
                                </manifest>
                            </archive>

                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <!-- bind to the packaging phase -->
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptor>src/assembly/dep.xml</descriptor>
                                    <appendAssemblyId>false</appendAssemblyId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>site-maven-plugin</artifactId>
                        <version>0.11</version>
                        <configuration>
                            <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                            <noJekyll>true
                            </noJekyll>                                  <!-- disable webpage processing -->
                            <outputDirectory>${project.build.directory}/mvn-repo
                            </outputDirectory> <!-- matches distribution management repository url above -->
                            <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <repositoryName>mavenized-jcuda</repositoryName>      <!-- github repo name -->
                            <repositoryOwner>MysterionRise</repositoryOwner>    <!-- github username  -->
                            <merge>true</merge>
                        </configuration>
                        <executions>
                            <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                            <execution>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
      <!--New profile for JCuda version 0.6.0RC for Win-x86_64 and higher

           will work automatically, thanks to auto activation
       -->
        <profile>
            <id>windows-x86_64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <dllJ.version>windows-x86_64</dllJ.version>
            </properties>
            <dependencies>
                <!--JCuda native dll libs-->
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusolver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
            </dependencies>
        </profile>
	
	</profiles>
	
	
	<inceptionYear>2016</inceptionYear>
</project>
